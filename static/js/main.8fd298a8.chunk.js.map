{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","About","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","TextInputGroup","_ref","label","name","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","email","phone","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this2","_this$state2","bind","layout_TextInputGroup","EditContact","updContact","match","params","put","Contact","showContactInfo","onDeleteClick","delete","t0","_this$props$contact","onClick","style","cursor","float","color","marginRight","Contacts","Fragment","contacts_Contact","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fd298a8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/* export default () => {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n} */\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          contact =>\r\n            contact.id === action.payload.id\r\n              ? (contact = action.payload)\r\n              : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === '') {\r\n      this.setState(state => {\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            name: 'Name is required'\r\n          }\r\n        };\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({ name: '', email: '', phone: '', errors: '' });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === '') {\r\n      this.setState(state => {\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            name: 'Name is required'\r\n          }\r\n        };\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({ name: '', email: '', phone: '', errors: '' });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  /* static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    phone: PropTypes.string.isRequired\r\n  }; */\r\n\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  onClick={e => {\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    });\r\n                  }}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  /* \r\n  componentWillMount() {\r\n    console.log('componentWillMount...');\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('componentDidUpdate...');\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('componentWillUpdate...');\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    console.log('componentWillReceiveProps...');\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return { test: 'something' };\r\n  }\r\n\r\n  getSnapshotBeforeUpdated(prevProps, prevState) {\r\n    console.log('getSnapshotBeforeUpdated...');\r\n  } */\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Contacts from './components/contacts/Contacts';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from './context';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}